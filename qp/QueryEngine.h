/*****************************************************************************
* Model: query.qm
* File:  ./QueryEngine.h
*
* This code has been generated by QM tool (see state-machine.com/qm).
* DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
*
* This program is open source software: you can redistribute it and/or
* modify it under the terms of the GNU General Public License as published
* by the Free Software Foundation.
*
* This program is distributed in the hope that it will be useful, but
* WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
* or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
* for more details.
*****************************************************************************/
/*${QueryEng::.::QueryEngine.h} ............................................*/
#pragma once

#include "qp_port.h"
#include "Events.h"

enum BlinkySignals {
    DUMMY_SIG = Q_USER_SIG,
    SYSTEM_SIG,
    TIMEOUT_SIG,
    MAX_SIG               /* the last signal */
};

QActive *AO_system(void);

/*${QueryEng::SystemEvent} .................................................*/
typedef struct {
/* protected: */
    QEvt super;

/* public: */
    Event_t event;
} SystemEvent;


/*${QueryEng::QueryEngine} .................................................*/
typedef struct {
/* protected: */
    QActive super;

/* public: */
    QTimeEvt timeEvt;

/* private: */
    QEvt const * evtStorage[128];
} QueryEngine;

/* public: */
void QueryEngine_ctor(QueryEngine * const me);

/* protected: */
QState QueryEngine_initial(QueryEngine * const me, QEvt const * const e);
QState QueryEngine_Working(QueryEngine * const me, QEvt const * const e);
QState QueryEngine_Init(QueryEngine * const me, QEvt const * const e);
QState QueryEngine_Processing(QueryEngine * const me, QEvt const * const e);
QState QueryEngine_Waiting(QueryEngine * const me, QEvt const * const e);
QState QueryEngine_Done(QueryEngine * const me, QEvt const * const e);

